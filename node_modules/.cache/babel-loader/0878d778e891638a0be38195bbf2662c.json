{"ast":null,"code":"var _jsxFileName = \"/Users/andrewtheodorides/Coding/webWork/qrcode/src/App.js\";\nimport React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { QRCode } from 'react-qrcode-logo';\nimport { TwitterPicker } from 'react-color';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles({\n  root: {\n    padding: '15px 15px'\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [urlText, setUrlText] = useState(\"https://github.com/gcoro/react-qrcode-logo\");\n  const [selectingBg, setSelectingBg] = useState('none');\n  const [backgroundColor, setBackColor] = useState('#FFFFFF');\n  const [fgColor, setFgColor] = useState('#000000');\n  const [qrStyle, setQrStyle] = useState('squares');\n\n  function handleClick() {\n    return setUrlText(\"https://www.npmjs.com/package/react-qrcode-logo\");\n  }\n\n  ;\n\n  function handleChangeBg(color) {\n    return setBackColor(color);\n  }\n\n  ;\n\n  function handleChangeFg(color) {\n    return setFgColor(color);\n  }\n\n  ;\n\n  function handleUrl(event) {\n    return setUrlText(event);\n  }\n\n  ;\n\n  function toggleStyle() {\n    if (qrStyle == 'dots') {\n      return setQrStyle('squares');\n    }\n\n    return setQrStyle('dots');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QRCode, {\n    value: urlText,\n    bgColor: backgroundColor,\n    fgColor: fgColor,\n    qrStyle: qrStyle,\n    size: 225,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"URL\",\n    variant: \"outlined\",\n    placeholder: \"https://github.com/gcoro/react-qrcode-logo\",\n    onChange: event => handleUrl(event.target.value),\n    InputProps: {\n      style: {\n        color: \"white\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, selectingBg == 'none' ? /*#__PURE__*/React.createElement(TwitterPicker, {\n    id: \"testing\",\n    color: backgroundColor,\n    onChangeComplete: ({\n      hex\n    }) => {\n      handleChangeBg(hex);\n    },\n    triangle: \"hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Choose a Background Color: \"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Choose a Foreground Color: \"), /*#__PURE__*/React.createElement(TwitterPicker, {\n    color: fgColor,\n    onChangeComplete: ({\n      hex\n    }) => {\n      handleChangeFg(hex);\n    },\n    triangle: \"hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Change Style\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewtheodorides/Coding/webWork/qrcode/src/App.js"],"names":["React","useState","QRCode","TwitterPicker","makeStyles","TextField","useStyles","root","padding","App","classes","urlText","setUrlText","selectingBg","setSelectingBg","backgroundColor","setBackColor","fgColor","setFgColor","qrStyle","setQrStyle","handleClick","handleChangeBg","color","handleChangeFg","handleUrl","event","toggleStyle","target","value","style","hex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { QRCode } from 'react-qrcode-logo';\nimport { TwitterPicker } from 'react-color';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '15px 15px',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [urlText, setUrlText] = useState(\"https://github.com/gcoro/react-qrcode-logo\");\n  const [selectingBg, setSelectingBg] = useState('none');\n  const [backgroundColor, setBackColor] = useState('#FFFFFF');\n  const [fgColor, setFgColor] = useState('#000000');\n  const [qrStyle, setQrStyle] = useState('squares');\n\n\n\n  function handleClick() {\n    return setUrlText(\"https://www.npmjs.com/package/react-qrcode-logo\");\n  };\n\n  function handleChangeBg(color){\n    return setBackColor(color);\n  };\n\n  function handleChangeFg(color){\n    return setFgColor(color);\n  };\n\n\n\n  function handleUrl(event){\n    return setUrlText(event);\n  };\n\n  function toggleStyle(){\n    if(qrStyle == 'dots'){\n      return setQrStyle('squares');\n    }\n    return setQrStyle('dots');\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className={classes.root}>\n        <QRCode value={urlText} bgColor={backgroundColor}  fgColor={fgColor} qrStyle={qrStyle} size={225} />\n        </div>\n        <div className={classes.root}>\n        <TextField id=\"outlined-basic\" label=\"URL\" variant=\"outlined\"\n          placeholder=\"https://github.com/gcoro/react-qrcode-logo\"\n          onChange={event => handleUrl(event.target.value)}\n          InputProps={{\n          style: {\n              color: \"white\"\n          }\n          }}\n        />\n        </div>\n\n        <div className={classes.root}>\n\n\n        {selectingBg == 'none' ? (\n        <TwitterPicker id=\"testing\" color={ backgroundColor } onChangeComplete={({hex}) => { handleChangeBg(hex);}} triangle=\"hide\"/>\n      ) : (\n        <h6>Choose a Background Color: </h6>\n        )}\n\n        <h6>Choose a Foreground Color: </h6>\n        <TwitterPicker color={ fgColor } onChangeComplete={({hex}) => { handleChangeFg(hex);}} triangle=\"hide\"/>\n\n        <button onClick={toggleStyle}>Change Style</button>\n</div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}