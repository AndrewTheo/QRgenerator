{"ast":null,"code":"var _jsxFileName = \"/Users/andrewtheodorides/Coding/webWork/qrcode/src/App.js\";\nimport React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { QRCode } from 'react-qrcode-logo';\nimport { TwitterPicker } from 'react-color';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Container, Row, Col } from 'reactstrap';\nimport type1 from './type1.png';\nimport type2 from './type2.png';\nconst useStyles = makeStyles({\n  root: {\n    padding: '15px 15px'\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [urlText, setUrlText] = useState(\"https://github.com/gcoro/react-qrcode-logo\");\n  const [selectingBg, setSelectingBg] = useState('false');\n  const [backgroundColor, setBackColor] = useState('#FFFFFF');\n  const [fgColor, setFgColor] = useState('#000000');\n  const [qrStyle, setQrStyle] = useState('squares');\n\n  function handleClick() {\n    return setUrlText(\"https://www.npmjs.com/package/react-qrcode-logo\");\n  }\n\n  ;\n\n  function handleChangeBg(color) {\n    return setBackColor(color);\n  }\n\n  ;\n\n  function handleChangeFg(color) {\n    return setFgColor(color);\n  }\n\n  ;\n\n  function handleUrl(event) {\n    return setUrlText(event);\n  }\n\n  ;\n\n  function toggleStyle() {\n    return setQrStyle('squares');\n  }\n\n  function toggleDots() {\n    return setQrStyle('dots');\n  }\n\n  function chooseBack() {\n    return setSelectingBg('true');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    display: \"flex\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QRCode, {\n    value: urlText,\n    bgColor: backgroundColor,\n    fgColor: fgColor,\n    qrStyle: qrStyle,\n    size: 225,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"URL\",\n    variant: \"outlined\",\n    placeholder: \"https://github.com/gcoro/react-qrcode-logo\",\n    onChange: event => handleUrl(event.target.value),\n    InputProps: {\n      style: {\n        color: \"white\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    display: \"flex\",\n    className: \"App-colors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"h6Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Background Color: \"), /*#__PURE__*/React.createElement(TwitterPicker, {\n    id: \"testing\",\n    color: backgroundColor,\n    onChangeComplete: ({\n      hex\n    }) => {\n      handleChangeBg(hex);\n    },\n    triangle: \"hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"h6Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Foreground Color: \"), /*#__PURE__*/React.createElement(TwitterPicker, {\n    color: fgColor,\n    onChangeComplete: ({\n      hex\n    }) => {\n      handleChangeFg(hex);\n    },\n    triangle: \"hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    width: 276,\n    className: \"buttons\",\n    display: \"flex\",\n    \"flex-direction\": \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"leftdiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: type1,\n    onClick: toggleStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: type2,\n    onClick: toggleDots,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 1\n    }\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewtheodorides/Coding/webWork/qrcode/src/App.js"],"names":["React","useState","QRCode","TwitterPicker","makeStyles","TextField","Container","Row","Col","type1","type2","useStyles","root","padding","App","classes","urlText","setUrlText","selectingBg","setSelectingBg","backgroundColor","setBackColor","fgColor","setFgColor","qrStyle","setQrStyle","handleClick","handleChangeBg","color","handleChangeFg","handleUrl","event","toggleStyle","toggleDots","chooseBack","target","value","style","hex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { QRCode } from 'react-qrcode-logo';\nimport { TwitterPicker } from 'react-color';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Container, Row, Col } from 'reactstrap';\nimport type1 from './type1.png';\nimport type2 from './type2.png';\n\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '15px 15px',\n  },\n\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [urlText, setUrlText] = useState(\"https://github.com/gcoro/react-qrcode-logo\");\n  const [selectingBg, setSelectingBg] = useState('false');\n  const [backgroundColor, setBackColor] = useState('#FFFFFF');\n  const [fgColor, setFgColor] = useState('#000000');\n  const [qrStyle, setQrStyle] = useState('squares');\n\n\n\n  function handleClick() {\n    return setUrlText(\"https://www.npmjs.com/package/react-qrcode-logo\");\n  };\n\n  function handleChangeBg(color){\n    return setBackColor(color);\n  };\n\n  function handleChangeFg(color){\n    return setFgColor(color);\n  };\n\n\n\n  function handleUrl(event){\n    return setUrlText(event);\n  };\n\n  function toggleStyle(){\n      return setQrStyle('squares');\n  }\n\n  function toggleDots(){\n    return setQrStyle('dots');\n  }\n\n  function chooseBack(){\n    return setSelectingBg('true');\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <div  display=\"flex\" className={classes.root}>\n        <QRCode value={urlText} bgColor={backgroundColor}  fgColor={fgColor} qrStyle={qrStyle} size={225} />\n\n\n\n        <div className={classes.root}>\n        <TextField id=\"outlined-basic\" label=\"URL\" variant=\"outlined\"\n          placeholder=\"https://github.com/gcoro/react-qrcode-logo\"\n          onChange={event => handleUrl(event.target.value)}\n          InputProps={{\n          style: {\n              color: \"white\"\n          }\n          }}\n        />\n        </div>\n          </div>\n\n        <div display=\"flex\" className=\"App-colors\">\n\n          <h6 className={\"h6Text\"}>Background Color: </h6>\n\n        <TwitterPicker id=\"testing\" color={ backgroundColor } onChangeComplete={({hex}) => { handleChangeBg(hex);}} triangle=\"hide\"/>\n\n\n\n        <h6 className={\"h6Text\"}>Foreground Color: </h6>\n        <TwitterPicker color={ fgColor } onChangeComplete={({hex}) => { handleChangeFg(hex);}} triangle=\"hide\"/>\n\n\n        <div width={276} className={\"buttons\"} display=\"flex\" flex-direction=\"row\">\n        <span className={\"leftdiv\"}>\n            <img src={type1} onClick={(toggleStyle)} />\n\n        </span>\n        <span >\n<img src={type2} onClick={toggleDots} />\n\n        </span>\n\n        </div>\n\n        </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}