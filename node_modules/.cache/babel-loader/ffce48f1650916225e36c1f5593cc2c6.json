{"ast":null,"code":"var _jsxFileName = \"/Users/andrewtheodorides/Coding/webWork/qrcode/src/App.js\";\nimport React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { QRCode } from 'react-qrcode-logo';\nimport { TwitterPicker } from 'react-color';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nfunction App() {\n  const [urlText, setUrlText] = useState(\"https://github.com/gcoro/react-qrcode-logo\");\n  const [backgroundColor, setBackColor] = useState('#FFFFFF');\n  const [fgColor, setFgColor] = useState('#000000');\n  const [qrStyle, setQrStyle] = useState('squares');\n\n  function handleClick() {\n    return setUrlText(\"https://www.npmjs.com/package/react-qrcode-logo\");\n  }\n\n  ;\n\n  function handleChangeBg(color) {\n    return setBackColor(color);\n  }\n\n  ;\n\n  function handleChangeFg(color) {\n    return setFgColor(color);\n  }\n\n  ;\n\n  function handleUrl(event) {\n    return setUrlText(event);\n  }\n\n  ;\n\n  function toggleStyle() {\n    if (qrStyle == 'dots') {\n      return setQrStyle('squares');\n    }\n\n    return setQrStyle('dots');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"change url\"), /*#__PURE__*/React.createElement(QRCode, {\n    value: urlText,\n    bgColor: backgroundColor,\n    fgColor: fgColor,\n    qrStyle: qrStyle,\n    size: 225,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"url\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Enter an https:// URL:\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"URL\",\n    variant: \"outlined\",\n    placeholder: \"https://github.com/gcoro/react-qrcode-logo\",\n    onChange: event => handleUrl(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TwitterPicker, {\n    color: backgroundColor,\n    onChangeComplete: ({\n      hex\n    }) => {\n      handleChangeBg(hex);\n    },\n    triangle: \"hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TwitterPicker, {\n    color: fgColor,\n    onChangeComplete: ({\n      hex\n    }) => {\n      handleChangeFg(hex);\n    },\n    triangle: \"hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Change Style\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewtheodorides/Coding/webWork/qrcode/src/App.js"],"names":["React","useState","QRCode","TwitterPicker","makeStyles","TextField","App","urlText","setUrlText","backgroundColor","setBackColor","fgColor","setFgColor","qrStyle","setQrStyle","handleClick","handleChangeBg","color","handleChangeFg","handleUrl","event","toggleStyle","target","value","hex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { QRCode } from 'react-qrcode-logo';\nimport { TwitterPicker } from 'react-color';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\n\nfunction App() {\n  const [urlText, setUrlText] = useState(\"https://github.com/gcoro/react-qrcode-logo\");\n  const [backgroundColor, setBackColor] = useState('#FFFFFF');\n  const [fgColor, setFgColor] = useState('#000000');\n  const [qrStyle, setQrStyle] = useState('squares');\n\n\n\n  function handleClick() {\n    return setUrlText(\"https://www.npmjs.com/package/react-qrcode-logo\");\n  };\n\n  function handleChangeBg(color){\n    return setBackColor(color);\n  };\n\n  function handleChangeFg(color){\n    return setFgColor(color);\n  };\n\n\n\n  function handleUrl(event){\n    return setUrlText(event);\n  };\n\n  function toggleStyle(){\n    if(qrStyle == 'dots'){\n      return setQrStyle('squares');\n    }\n    return setQrStyle('dots');\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={handleClick}>change url</button>\n        <QRCode value={urlText} bgColor={backgroundColor}  fgColor={fgColor} qrStyle={qrStyle} size={225} />\n        <label for=\"url\">Enter an https:// URL:</label>\n        <TextField id=\"outlined-basic\" label=\"URL\" variant=\"outlined\"  placeholder=\"https://github.com/gcoro/react-qrcode-logo\" onChange={event => handleUrl(event.target.value)} />\n        \n\n        <TwitterPicker color={ backgroundColor } onChangeComplete={({hex}) => { handleChangeBg(hex);}} triangle=\"hide\"/>\n        <TwitterPicker color={ fgColor } onChangeComplete={({hex}) => { handleChangeFg(hex);}} triangle=\"hide\"/>\n\n        <button onClick={toggleStyle}>Change Style</button>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}